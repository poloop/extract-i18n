{"version":3,"file":"extract-i18n.umd.js","sources":["../src/language-files-parser.ts","../src/extract-i18n.ts"],"sourcesContent":["import * as path from 'path'\nimport * as fs from 'fs'\nimport glob from 'glob'\nimport isValidGlob from 'is-valid-glob'\nimport json5 from 'json5'\nimport Dot from 'dot-object'\n\nexport interface I18nObject {\n  [index: string]: string\n}\n\nexport interface I18nStructuredData {\n  [index: string]: string | I18nObject\n}\n\nexport type ParserOptions = {\n  languageFiles?: string,\n  encoding?: string\n}\n\ntype SimpleFile = {\n  fileName: string\n  path: string\n  content: I18nStructuredData\n}\n\nexport const defaultParserOptions: ParserOptions = {\n  languageFiles: './locale/**/*.?(json|json5)'\n}\n\nexport default class LanguageFilesParser {\n  \n  options: ParserOptions\n  \n  constructor(options: ParserOptions = defaultParserOptions) {\n    this.options = {\n      ...defaultParserOptions,\n      ...options\n    }\n  }\n\n  read(src: string | undefined): SimpleFile[] {\n    if (!isValidGlob(src)) {\n      throw new Error(\"languageFiles isn't a valid glob pattern.\");\n    }\n\n    // eslint-disable-next-line no-console\n    console.log(`Read data from \"${src}\"...`)\n\n    const targetFiles: string[] = glob.sync(src)\n\n    if (targetFiles.length === 0) {\n      throw new Error('languageFiles glob has no files.');\n    }\n  \n    return targetFiles.map((f: string) => {\n      const fullPath: string = path.resolve(process.cwd(), f)\n      const extension: string = path.extname(fullPath).toLowerCase()\n\n      let content: I18nStructuredData = {}\n      \n      switch (extension) {\n        case '.json':\n          content = JSON.parse(<string>fs.readFileSync(fullPath, 'utf8'))\n          break;\n        case '.json5':\n          content = json5.parse(<string>fs.readFileSync(fullPath, 'utf8'))\n          break;\n      }\n\n      return <SimpleFile>{\n        fileName: f.replace(process.cwd(), '.'),\n        path: f,\n        content\n      }\n    })\n  }\n\n  extract(languageFiles: (SimpleFile)[]): I18nStructuredData {\n    const localeDir = this.options.languageFiles?.split('**')[0]\n    if (!localeDir) {\n      throw new Error(\"languageFiles should be in a separate directory.\");\n    }\n    return languageFiles.reduce((acc: any, file: SimpleFile) => {\n      const i18nFileName: string = path.basename(file.fileName)\n\n      const regExp = new RegExp(`(?<=${localeDir})(.*?)(?=/)`)\n\n      const result = file.fileName.match(regExp)\n\n      const lang: string|null = result ? result[0] : null\n\n      if (!lang) {\n        throw new Error(\"languageFiles should be in a language directory named with the language code.\");\n      }\n      const i18nFileContent: I18nStructuredData = file.content\n\n      acc[lang] = {\n        ...(acc[lang] ?? {}), \n        [i18nFileName]: Dot.dot(i18nFileContent)\n      }\n\n      return acc\n    }, {})\n  }\n\n  getMissingKeys(data: I18nStructuredData): { lang: string, fileName: string, key: string }[] {\n    const missingKeys: { lang: string, fileName: string, key: string }[] = [] \n    Object.keys(data).forEach((lang: string) => {\n      Object.keys(data[lang]).forEach((file: string) => {\n        Object.keys((data[lang] as I18nStructuredData)[file]).forEach((key: string) => {\n          Object.keys(data).filter(lg => lg !== lang).forEach((otherLang: string) => {\n            if (!((data[otherLang] as I18nStructuredData)?.[file] as I18nObject)?.[key]) {\n              missingKeys.push({\n                lang: otherLang,\n                fileName: file,\n                key\n              })\n            }\n          })\n        }) \n      })\n    })\n    return missingKeys\n  }\n\n  getDuplicateKeys(data: I18nStructuredData): { content: string, lang: string, fileNames: string[], keys: string[]}[] {\n    const duplicateContents: { content: string, lang: string, file: string, key: string}[] = []\n    Object.keys(data).forEach((lang: string) => {\n      Object.keys(data[lang]).forEach((file: string) => {\n        Object.keys((data[lang] as I18nStructuredData)[file]).forEach((key: string) => {\n          duplicateContents.push({ content: ((data[lang] as I18nStructuredData)[file] as I18nObject)[key], lang, key, file})\n        })\n      })\n    })\n    const duplicateKeys = duplicateContents.reduce((acc: any, { content, lang, file, key }) => {\n      if (duplicateContents.filter(({content: contentToCheck}) => content === contentToCheck).length > 1) {\n        acc[content] = {content, lang, fileNames: [...(acc[content]?.fileNames ?? []), file], keys: [...(acc[content]?.keys ?? []), key]}\n      }\n      return acc\n    }, {})\n    return Object.values(duplicateKeys)\n  }\n}","\nimport LanguageFilesParser, { defaultParserOptions } from './language-files-parser'\n\nexport enum ReportActions {\n  MISSINGS = 'missings',\n  DUPLICATES = 'duplicates'\n}\n\nexport function createI18nReport(actions: ReportActions, languageFiles: string | undefined = defaultParserOptions.languageFiles) {\n  const parser = new LanguageFilesParser({ languageFiles })\n  const data = parser.extract(parser.read(parser.options.languageFiles)) \n\n  return {\n    missingKeys: (!actions || actions === ReportActions.MISSINGS) ? parser.getMissingKeys(data) : [],\n    duplicateKeys: (!actions || actions === ReportActions.DUPLICATES) ? parser.getDuplicateKeys(data) : [],\n  }\n}\n\nprocess.on('uncaughtException', (err) => {\n  // eslint-disable-next-line no-console\n  console.error('[extract-i18n]', err);\n  process.exit(1);\n});\n\nprocess.on('unhandledRejection', (err) => {\n  // eslint-disable-next-line no-console\n  console.error('[extract-i18n]', err);\n  process.exit(1);\n});"],"names":["defaultParserOptions","languageFiles","LanguageFilesParser","constructor","options","read","src","isValidGlob","Error","console","log","targetFiles","glob","sync","length","map","f","fullPath","path","resolve","process","cwd","extension","extname","toLowerCase","content","JSON","parse","fs","readFileSync","json5","fileName","replace","extract","localeDir","split","reduce","acc","file","i18nFileName","basename","regExp","RegExp","result","match","lang","i18nFileContent","Dot","dot","getMissingKeys","data","missingKeys","Object","keys","forEach","key","filter","lg","otherLang","push","getDuplicateKeys","duplicateContents","duplicateKeys","contentToCheck","fileNames","values","ReportActions","createI18nReport","actions","parser","MISSINGS","DUPLICATES","on","err","error","exit"],"mappings":"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"}